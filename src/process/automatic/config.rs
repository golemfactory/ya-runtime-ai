use std::time::Duration;

use serde::Deserialize;

#[derive(Deserialize, Clone, Debug, Default)]
pub(crate) struct Config {
    #[serde(default = "default_startup_script")]
    pub startup_script: String,

    #[serde(default = "default_api_port")]
    pub api_port: u16,

    #[serde(default = "default_api_host")]
    pub api_host: String,

    #[serde(default = "default_api_shutdown_path")]
    pub api_shutdown_path: String,

    #[serde(default = "default_model_arg")]
    pub model_arg: String,

    #[serde(default = "default_additional_args")]
    pub additional_args: Vec<String>,

    // Monitor
    #[serde(with = "humantime_serde")]
    #[serde(default = "default_startup_timeout")]
    pub startup_timeout: Duration,

    #[serde(with = "humantime_serde")]
    #[serde(default = "default_api_ping_delay")]
    pub api_ping_delay: Duration,

    #[serde(default = "default_monitored_startup_msg")]
    pub monitored_startup_msg: String,

    #[serde(default = "default_monitored_model_failure_msg")]
    pub monitored_model_failure_msg: String,

    #[serde(default = "default_monitored_msgs_w_trace_lvl")]
    pub monitored_msgs_w_trace_lvl: Vec<String>,
}

fn default_startup_script() -> String {
    "sd.webui_noxformers/run.bat".into()
}

fn default_api_port() -> u16 {
    7861
}

fn default_api_host() -> String {
    "localhost".into()
}

fn default_api_shutdown_path() -> String {
    "sdapi/v1/server-kill".into()
}

fn default_model_arg() -> String {
    "--ckpt".into()
}

fn default_additional_args() -> Vec<String> {
    vec![
        "--skip-torch-cuda-test".into(),
        "--skip-python-version-check".into(),
        "--skip-version-check".into(),
    ]
}

fn default_startup_timeout() -> Duration {
    Duration::from_secs(90)
}

fn default_api_ping_delay() -> Duration {
    Duration::from_millis(997)
}

fn default_monitored_startup_msg() -> String {
    "Model loaded in ".into()
}

fn default_monitored_model_failure_msg() -> String {
    "Stable diffusion model failed to load".into()
}

fn default_monitored_msgs_w_trace_lvl() -> Vec<String> {
    vec![
        // log generated by API ping task
        "\"GET / HTTP/1.1\" 404 Not Found".into(),
    ]
}
