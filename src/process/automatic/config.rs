use std::time::Duration;

use clap::Parser;

#[derive(Parser, Debug, Clone)]
#[group(id = "automatic")]
pub(crate) struct Config {
    #[arg(long, default_value = "sd.webui_noxformers/run.bat")]
    pub startup_script: String,

    #[arg(long, default_value = "7861")]
    pub api_port: u16,

    #[arg(long, default_value = "localhost")]
    pub api_host: String,

    #[arg(long, default_value = "sdapi/v1/server-kill")]
    pub api_shutdown_path: String,

    #[arg(long, default_value = "--ckpt")]
    pub model_arg: String,

    #[arg(long, default_values=[
        "--skip-torch-cuda-test",
        "--skip-python-version-check",
        "--skip-version-check"
    ])]
    pub additional_args: Vec<String>,

    // Monitor
    #[arg(long, value_parser = humantime::parse_duration, default_value = "90s")]
    pub startup_timeout: Duration,

    #[arg(long, value_parser = humantime::parse_duration, default_value = "997ms")]
    pub api_ping_delay: Duration,

    #[arg(long, default_value = "Model loaded in ")]
    pub monitored_startup_msg: String,

    #[arg(long, default_value = "Stable diffusion model failed to load")]
    pub monitored_model_failure_msg: String,

    #[arg(long, default_values=[
        // log generated by API ping task
        "\"GET / HTTP/1.1\" 404 Not Found",
    ])]
    pub monitored_msgs_w_trace_lvl: Vec<String>,
}
